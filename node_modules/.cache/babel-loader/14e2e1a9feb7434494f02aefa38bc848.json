{"ast":null,"code":"import \"core-js/modules/es6.regexp.to-string\";\nimport _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'next/router';\nimport PropTypes from 'prop-types'; //import { toggleTap, incrementCount, decrementCount } from '../redux/actions';\n\nimport Head from 'next/head';\nimport Button from \"../components/button\";\nimport Social from \"../components/social\";\nimport Portfolio from \"../components/portfolio\";\nimport SpringImage from \"../components/springimage\";\nimport styles from \"./Index.scss\";\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  _createClass(Index, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var reduxStore = _ref.reduxStore,\n          req = _ref.req;\n      var isServer = !!req;\n      return {};\n    }\n  }]);\n\n  function Index(props) {\n    _classCallCheck(this, Index);\n\n    return _super.call(this, props);\n  } // toggle = () => {\n  // \tconst { toggleTap } = this.props\n  // \ttoggleTap()\n  // }\n  // increment = () => {\n  // \tconst { incrementCount } = this.props\n  // \tincrementCount()\n  // }\n  // decrement = () => {\n  // \tconst { decrementCount } = this.props\n  // \tdecrementCount()\n  // }\n\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var router = this.props.router;\n      var text_logo_styles = {\n        background: \"url(static/leakybarrel-text-logo.png) center center / 100% no-repeat\"\n      };\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n        className: styles('main', 'container')\n      }, /*#__PURE__*/React.createElement(Portfolio, null)));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\n_defineProperty(Index, \"propTypes\", {\n  router: PropTypes.object\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tap: state.tap,\n    count: state.count\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index));","map":{"version":3,"sources":["/Users/reuters/Engineering/Julia-Portfolio-Next/pages/Index.jsx"],"names":["Component","connect","bindActionCreators","withRouter","PropTypes","Head","Button","Social","Portfolio","SpringImage","styles","Index","reduxStore","req","isServer","props","router","text_logo_styles","background","object","mapStateToProps","state","tap","count","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AAEA,OAAOC,MAAP;;IAEMC,K;;;;;;;0CACwC;AAAA,UAAnBC,UAAmB,QAAnBA,UAAmB;AAAA,UAAPC,GAAO,QAAPA,GAAO;AAC5C,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB;AAEA,aAAO,EAAP;AACA;;;AAMD,iBAAYE,KAAZ,EAAmB;AAAA;;AAAA,6BACZA,KADY;AAElB,G,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;6BAES;AAAA,UAEPC,MAFO,GAGJ,KAAKD,KAHD,CAEPC,MAFO;AAKR,UAAMC,gBAAgB,GAAG;AACxBC,QAAAA,UAAU;AADc,OAAzB;AAIA,0BACC,uDACC;AAAS,QAAA,SAAS,EAAER,MAAM,CAAC,MAAD,EAAS,WAAT;AAA1B,sBACC,oBAAC,SAAD,OADD,CADD,CADD;AAQA;;;;EA/CkBV,S;;gBAAdW,K,eAOc;AAClBK,EAAAA,MAAM,EAAEZ,SAAS,CAACe;AADA,C;;AA2CpB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNC,IAAAA,GAAG,EAAED,KAAK,CAACC,GADL;AAENC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFP,GAAP;AAIA,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACtC,SAAO,EAAP;AACA,CAFD;;AAIA,eAAexB,OAAO,CACrBmB,eADqB,EAErBI,kBAFqB,CAAP,CAGbrB,UAAU,CAACQ,KAAD,CAHG,CAAf","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'next/router';\nimport PropTypes from 'prop-types';\n//import { toggleTap, incrementCount, decrementCount } from '../redux/actions';\nimport Head from 'next/head';\nimport Button from 'components/button';\nimport Social from 'components/social';\nimport Portfolio from 'components/portfolio';\nimport SpringImage from 'components/springimage';\n\nimport styles from './Index.scss';\n\nclass Index extends Component {\n\tstatic getInitialProps ({ reduxStore, req }) {\n\t\tconst isServer = !!req\n\n\t\treturn {}\n\t}\n\n\tstatic propTypes = {\n\t\trouter: PropTypes.object,\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\t// toggle = () => {\n\t// \tconst { toggleTap } = this.props\n\t// \ttoggleTap()\n\t// }\n\n\t// increment = () => {\n\t// \tconst { incrementCount } = this.props\n\t// \tincrementCount()\n\t// }\n\n\t// decrement = () => {\n\t// \tconst { decrementCount } = this.props\n\t// \tdecrementCount()\n\t// }\n\n\trender() {\n\t\tconst {\n\t\t\trouter\n\t\t} = this.props;\n\n\t\tconst text_logo_styles = {\n\t\t\tbackground: `url(static/leakybarrel-text-logo.png) center center / 100% no-repeat`\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<section className={styles('main', 'container')}>\n\t\t\t\t\t<Portfolio />\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttap: state.tap,\n\t\tcount: state.count\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {};\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(withRouter(Index));\n"]},"metadata":{},"sourceType":"module"}