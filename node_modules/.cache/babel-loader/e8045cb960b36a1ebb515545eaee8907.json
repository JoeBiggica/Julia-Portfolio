{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useState, useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styles from \"./SpringImage.scss\";\n\nvar calc = function calc(x, y) {\n  return [x - window.innerWidth / 10, y - window.innerHeight / 10];\n};\n\nvar trans = function trans(x, y) {\n  return \"translate3d(\".concat(x / 10, \"px,\").concat(y / 10, \"px,0)\");\n};\n\nfunction SpringImage(props) {\n  var className = props.className,\n      image_url = props.image_url;\n  var ref = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHovered = _useState2[0],\n      setHovered = _useState2[1];\n\n  var _useSpring = useSpring(function () {\n    return {\n      xy: [0, 0],\n      config: {\n        mass: 10,\n        tension: 550,\n        friction: 140\n      }\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      amimateProps = _useSpring2[0],\n      setAnimateProps = _useSpring2[1];\n\n  var image_styles = {\n    backgroundImage: \"url(\".concat(image_url, \")\")\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames(styles('container'), className)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    onMouseMove: function onMouseMove(_ref) {\n      var x = _ref.clientX,\n          y = _ref.clientY;\n      return setAnimateProps({\n        xy: calc(0, 0)\n      });\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setAnimateProps({\n        xy: [0, 0]\n      });\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    ref: ref,\n    className: styles('card'),\n    style: _objectSpread({\n      transform: amimateProps.xy.interpolate(trans)\n    }, image_styles)\n  })));\n}\n\nSpringImage.propTypes = {\n  className: PropTypes.string,\n  image_url: PropTypes.string\n};\nexport default SpringImage;","map":{"version":3,"sources":["/Users/reuters/Engineering/Julia-Portfolio-Next/components/springimage/SpringImage.jsx"],"names":["PropTypes","classnames","useState","useRef","useSpring","animated","styles","calc","x","y","window","innerWidth","innerHeight","trans","SpringImage","props","className","image_url","ref","isHovered","setHovered","xy","config","mass","tension","friction","amimateProps","setAnimateProps","image_styles","backgroundImage","clientX","clientY","transform","interpolate","propTypes","string"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,CAACD,CAAC,GAAGE,MAAM,CAACC,UAAP,GAAoB,EAAzB,EAA6BF,CAAC,GAAGC,MAAM,CAACE,WAAP,GAAqB,EAAtD,CAAV;AAAA,CAAb;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACL,CAAD,EAAIC,CAAJ;AAAA,+BAAyBD,CAAC,GAAG,EAA7B,gBAAqCC,CAAC,GAAG,EAAzC;AAAA,CAAd;;AAEA,SAASK,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAE1BC,SAF0B,GAIvBD,KAJuB,CAE1BC,SAF0B;AAAA,MAG1BC,SAH0B,GAIvBF,KAJuB,CAG1BE,SAH0B;AAM3B,MAAMC,GAAG,GAAGf,MAAM,EAAlB;;AAN2B,kBAQKD,QAAQ,CAAC,KAAD,CARb;AAAA;AAAA,MAQpBiB,SARoB;AAAA,MAQTC,UARS;;AAAA,mBAUahB,SAAS,CAAC;AAAA,WAAO;AACxDiB,MAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoD;AAExDC,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,OAAO,EAAE,GAFF;AAGPC,QAAAA,QAAQ,EAAE;AAHH;AAFgD,KAAP;AAAA,GAAD,CAVtB;AAAA;AAAA,MAUpBC,YAVoB;AAAA,MAUNC,eAVM;;AAoB3B,MAAMC,YAAY,GAAG;AACpBC,IAAAA,eAAe,gBAASZ,SAAT;AADK,GAArB;AAIA,sBACC;AAAK,IAAA,SAAS,EAAEhB,UAAU,CAACK,MAAM,CAAC,WAAD,CAAP,EAAsBU,SAAtB;AAA1B,kBACC;AACC,IAAA,KAAK,EAAC,WADP;AAEC,IAAA,WAAW,EAAE;AAAA,UAAYR,CAAZ,QAAGsB,OAAH;AAAA,UAAwBrB,CAAxB,QAAesB,OAAf;AAAA,aAAgCJ,eAAe,CAAC;AAAEN,QAAAA,EAAE,EAAEd,IAAI,CAAC,CAAD,EAAI,CAAJ;AAAV,OAAD,CAA/C;AAAA,KAFd;AAGC,IAAA,YAAY,EAAE;AAAA,aAAMoB,eAAe,CAAC;AAAEN,QAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAN,OAAD,CAArB;AAAA;AAHf,kBAKC,oBAAC,QAAD,CAAU,GAAV;AACC,IAAA,GAAG,EAAEH,GADN;AAEC,IAAA,SAAS,EAAEZ,MAAM,CAAC,MAAD,CAFlB;AAGC,IAAA,KAAK;AACJ0B,MAAAA,SAAS,EAAEN,YAAY,CAACL,EAAb,CAAgBY,WAAhB,CAA4BpB,KAA5B;AADP,OAEDe,YAFC;AAHN,IALD,CADD,CADD;AAmBA;;AAEDd,WAAW,CAACoB,SAAZ,GAAwB;AACvBlB,EAAAA,SAAS,EAAEhB,SAAS,CAACmC,MADE;AAEvBlB,EAAAA,SAAS,EAAEjB,SAAS,CAACmC;AAFE,CAAxB;AAKA,eAAerB,WAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useState, useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styles from './SpringImage.scss';\n\nconst calc = (x, y) => [x - window.innerWidth / 10, y - window.innerHeight / 10];\nconst trans = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`;\n\nfunction SpringImage(props) {\n\tconst {\n\t\tclassName,\n\t\timage_url\n\t} = props;\n\n\tconst ref = useRef();\n\n\tconst [isHovered, setHovered] = useState(false);\n\n\tconst [amimateProps, setAnimateProps] = useSpring(() => ({ \n\t\txy: [0, 0], \n\t\tconfig: { \n\t\t\tmass: 10, \n\t\t\ttension: 550, \n\t\t\tfriction: 140 \n\t\t} \n\t}));\n\n\n\tconst image_styles = {\n\t\tbackgroundImage: `url(${image_url})`,\n\t}\n\n\treturn (\n\t\t<div className={classnames(styles('container'), className)}>\n\t\t\t<div \n\t\t\t\tclass=\"container\" \n\t\t\t\tonMouseMove={({ clientX: x, clientY: y }) => setAnimateProps({ xy: calc(0, 0) })}\n\t\t\t\tonMouseLeave={() => setAnimateProps({ xy: [0, 0] })}\n\t\t\t>\n\t\t\t\t<animated.div \n\t\t\t\t\tref={ref}\n\t\t\t\t\tclassName={styles('card')} \n\t\t\t\t\tstyle={{ \n\t\t\t\t\t\ttransform: amimateProps.xy.interpolate(trans),\n\t\t\t\t\t\t...image_styles\n\t\t\t\t\t}} \n\t\t\t\t/>\n\t\t    </div>\n\n\t\t</div>\n\t);\t\n}\n\nSpringImage.propTypes = {\n\tclassName: PropTypes.string,\n\timage_url: PropTypes.string\n};\n\nexport default SpringImage;\n"]},"metadata":{},"sourceType":"module"}